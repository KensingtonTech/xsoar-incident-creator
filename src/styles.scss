body {
  background-color: rgb(26, 50, 66);
  color: white;
  font-family: "Open Sans", "Helvetica Neue", sans-serif;
}

.demistoForm {
  margin-top: 2em;
  align-items: stretch;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-row-gap: 2em;
  grid-column-gap: 1em;
}

.fieldsForm {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 1em;
  // position: relative;
  // width: 100%;
}

/*.column {
  display: inline-block;
  vertical-align: top;
}*/

.success {
  color: green;
}

.failure {
  color: red;
}

.newUserForm {
  display: grid;
  grid-template-columns: auto;
  grid-row-gap: 1em;
  grid-column-gap: 1em;
}

.bodyHeader {
  margin-bottom: .25em;
}

.success {
  color: green($color: #000000);
}

.failure {
  color: red($color: #000000);
}

body .ui-button {
  margin-right: .5em;
}

/* Form Labels */

body .ui-card {
  margin-bottom: 1em;
  background-color: rgb(0, 15, 26) !important;
}

body .ui-card-title {
  color: rgb(118, 139, 161);
}

body .ui-card-subtitle {
  color: rgb(126, 126, 126);
}

body .ui-radiobutton-label {
  color: #afb4b7;
}

body .ui-dialog-content {
  height: 95%;
}

.formLabel {
  font-weight: bold;
  font-size: 14px;
  color: rgb(126, 126, 126);
}

.cardHeader {
  color: rgb(126, 126, 126);
}

/* Container Positioning */

.messagesContainer {
  position: absolute;
  /*overflow: visible;*/
  top: 0;
  height: 5em;
  left: 2em;
  right: 2em;
  z-index: 1200;
  pointer-events: none; // make container un-clickable by default
  > p-messages > div {
    pointer-events: initial; // if visible, make the messages container clickable
  }
}

.formContainer {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: auto;
  max-height: 100%;
}

.fieldContainer {
  display: grid;
  grid-template-columns: auto auto auto 1fr;
  grid-row-gap: .5em;
  grid-column-gap: .5em;
  margin-top: 1em;
}

.freeformFieldContainer {
  display: grid;
  grid-template-columns: auto auto auto auto 1fr auto;
  grid-row-gap: .5em;
  grid-column-gap: .5em;
  margin-top: 1em;
}

incident-field-row,
freeform-json-row {
  display: contents; // fixes css grid for incident-field-line components by passing-through content
}

.inputDisplay {
  width: 100%;
}

header {
  color: rgb(118, 139, 161);
  font-weight: bold;
}

.valueContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.verticalCenter {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.enabledIcon,
.jmesPathResolved {
  color: white;
}

.jmesPathError {
  color: red;
}

.menuContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}



.disabledIcon {
  color: rgb(51, 51, 51);
}

.locked {
  color: red !important;
}

.editJsonLink {
  font-weight: bold;
  text-decoration: underline;
  color: rgb(126, 126, 126);
}

.editJsonButtonGroup {
  display: flex;
  justify-content: space-between;
  margin-top: .5em;
}

.editJsonWindow {
  display: flex;
  flex-direction: column;
  height: 100%;
}

textarea.jsonTextAreaDisplay {
  width: 100%;
  height: 100%;
  resize: none;
}

textarea[disabled].jsonTextAreaDisplay,
textarea[read-only].jsonTextAreaDisplay {
  opacity: initial;
}

.fieldMappingSelection {
  display: block;
  position: fixed;
  width: 22em;
  top: 5em;
  right: 0;
  left: 0;
  margin-right: auto;
  margin-left: auto;
  background-color: rgb(123, 104, 238, 0.6);
  font-weight: bold;
  text-align: center;
  padding: 1em;
  border-radius: 1em;
}



/* Input Text Fields */


/*input:-internal-autofill-selected {
  background-color: ;
}*/
body .ui-inputtext {
  background-color: rgb(27, 39, 49);
  color: rgb(175, 180, 183);
  outline-style: none;
  outline-width: 0px;
  border-width: 0;
  padding-left: 0.678571em;
  padding-right: 0.678571em;
  padding-top: 0.678571em;
  padding-bottom: 0.678571em;
}

textarea {
  resize: vertical;
}

/* AD Listbox */

body .ui-listbox .ui-listbox-list {
  // background-color: rgba(255, 255, 255, 0.1);
  background-color: rgb(27, 39, 49);

  .ui-listbox-item {
    color: rgb(175, 180, 183);
  }
}



/* p-dropdown */
body .ui-dropdown { //.ui-dropdown-list
  // background-color: rgba(255, 255, 255, 0.1);
  background-color: rgb(27, 39, 49);

  .ui-dropdown-item {
    color: rgb(175, 180, 183);
  }
}


/////////////////// PrimeNG ///////////////////

* {
  // undo PrimeNG's global box-sizing change
  -moz-box-sizing: initial;
  -webkit-box-sizing: initial;
  box-sizing: initial;
}





.fieldLabel {
  color: rgb(126, 126, 126);
  vertical-align: middle;
  // span { }
}



/*.alignButton {
  align-items: initial;
}*/



body p-fileupload {
  vertical-align: middle;
  display: inline-block;
}

.underline {
  text-decoration: underline;
}

.bulkCreateResults {
  display: grid;
  // align-items: stretch;
  grid-template-columns: 3fr 1fr 1fr 1fr 1fr;
  grid-row-gap: .5em;
  grid-column-gap: .5em;
}

.bulkCreateResultsGridHeader {
  font-weight: bold;
  font-size: 14px;
}

.bulkCreateResultsInfoIcon {
  font-size: 1.5em !important;
}

.bulkCreateContainer {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: stretch;

  > :first-child {
    margin-right: 1em;
  }
}

.bulkCreateContainerColumn {
  flex: 1;
}

@import './app/ngx-json-viewer/ngx-json-viewer.component.scss';